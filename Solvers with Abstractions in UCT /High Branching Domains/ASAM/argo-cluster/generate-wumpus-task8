#!/usr/bin/env python

import os
import re
import random

problem = "wumpus"
extra_parameters = "-t 1 -D 500"
task_number = 8

microtask_number = 100
microtask_file = problem + "_mutask" + str(task_number) + "_"

tasks = [
    "10 10 0 0", "10 10 0 0", "10 10 0 0", "10 10 0 0", "10 10 0 0",
    "10 10 1 0", "10 10 1 0", "10 10 1 0", "10 10 1 0", "10 10 1 0",
    "10 10 2 0", "10 10 2 0", "10 10 2 0", "10 10 2 0", "10 10 2 0",
    "10 10 3 0", "10 10 3 0", "10 10 3 0", "10 10 3 0", "10 10 3 0",
    "10 10 4 0", "10 10 4 0", "10 10 4 0", "10 10 4 0", "10 10 4 0",
    "10 10 5 0", "10 10 5 0", "10 10 5 0", "10 10 5 0", "10 10 5 0",
    "10 10 6 0", "10 10 6 0", "10 10 6 0", "10 10 6 0", "10 10 6 0",
    "10 10 7 0", "10 10 7 0", "10 10 7 0", "10 10 7 0", "10 10 7 0",
    "10 10 8 0", "10 10 8 0", "10 10 8 0", "10 10 8 0", "10 10 8 0",
    #"10 10 9 0", "10 10 9 0", "10 10 9 0", "10 10 9 0", "10 10 9 0",
    #"10 10 10 0", "10 10 10 0", "10 10 10 0", "10 10 10 0", "10 10 10 0",
    #"10 10 11 0", "10 10 11 0", "10 10 11 0", "10 10 11 0", "10 10 11 0",
    #"10 10 12 0", "10 10 12 0", "10 10 12 0", "10 10 12 0", "10 10 12 0",
    #"10 10 13 0", "10 10 13 0", "10 10 13 0", "10 10 13 0", "10 10 13 0",
    #"10 10 14 0", "10 10 14 0", "10 10 14 0", "10 10 14 0", "10 10 14 0",
    #"10 10 15 0", "10 10 15 0", "10 10 15 0", "10 10 15 0", "10 10 15 0",
    #"10 10 16 0", "10 10 16 0", "10 10 16 0", "10 10 16 0", "10 10 16 0",
    #"10 10 17 0", "10 10 17 0", "10 10 17 0", "10 10 17 0", "10 10 17 0",
    #"10 10 18 0", "10 10 18 0", "10 10 18 0", "10 10 18 0", "10 10 18 0",
    #"10 10 19 0", "10 10 19 0", "10 10 19 0", "10 10 19 0", "10 10 19 0",
    #"10 10 20 0", "10 10 20 0", "10 10 20 0", "10 10 20 0", "10 10 20 0",
]

policies = [
    "greedy aot",
]

rollout_widths = [ ]
uct_widths = [ ]
uct_parameters = [ 0 ]
aot_widths = [ 50 ]
aot_random_widths = [ ]
aot_value_widths = [ ]
aot_parameters = [ .5 ]
aot_nexp = [ .1 ]

def open_file():
    f = open(microtask_file + str(microtask_number), 'w')
    f.write('#!/usr/bin/env python\n')
    f.write('import os\n')
    f.write('output = open("output.' + microtask_file + str(microtask_number) + '", "w")\n')
    f.write('cmd = "./' + problem + ' -h 2 -s ' + str(random.randrange(0,100000)) + ' ' + extra_parameters + ' ')
    return f

def close_file(f):
    global microtask_number
    f.write('"\n')
    f.write('output.write("cmd=" + cmd + "\\n")\n')
    f.write('output.close()\n')
    f.write('os.system(cmd + " >> output.' + microtask_file + str(microtask_number) + '")\n')
    f.close()
    microtask_number += 1

for task in tasks:
    depth = 50
    for p in policies:
        if p == "optimal direct" or p == "greedy direct" or p == "random direct":
            f = open_file()
            f.write(task + ' ' + p)
            close_file(f)
        elif p == "greedy rollout" or p == "random rollout" or p == "optimistic rollout":
            for width in rollout_widths:
                for nesting in range(1, 2):
                    f = open_file()
                    f.write(task + ' ' + p + ' ')
                    f.write(str(width) + ' ' + str(depth) + ' 0 ' + str(nesting))
                    close_file(f)
        elif p == "random uct" or p == "greedy uct" or p == "optimistic uct":
            for width in uct_widths:
                for par in uct_parameters:
                    f = open_file()
                    f.write(task + ' ' + p + ' ')
                    f.write(str(width) + ' ' + str(depth) + ' ' + str(par))
                    close_file(f)
        elif p == "random aot" or p == "greedy aot" or p == "optimistic aot":
            for width in aot_widths:
                for par in aot_parameters:
                    for factor in aot_nexp:
                        nexp = int(factor * width)
                        if nexp > 0:
                            f = open_file()
                            f.write(task + ' ' + p + ' ')
                            f.write(str(width) + ' ' + str(depth) + ' ' + str(par) + ' ' + str(nexp))
                            close_file(f)
        elif p == "random aot*" or p == "greedy aot*" or p == "optimistic aot*":
            for width in aot_widths:
                for par in aot_parameters:
                    for factor in aot_nexp:
                        nexp = int(factor * width)
                        if nexp > 0:
                            f = open_file()
                            f.write(task + ' ' + p + ' ')
                            f.write(str(width) + ' ' + str(depth) + ' ' + str(par) + ' ' + str(nexp))
                            close_file(f)
        elif p == "random aot-random" or p == "optimistic aot-random":
            for width in aot_random_widths:
                for par in aot_parameters:
                    for factor in aot_nexp:
                        nexp = int(factor * width)
                        if nexp > 0:
                            f = open_file()
                            f.write(task + ' ' + p + ' ')
                            f.write(str(width) + ' ' + str(depth) + ' ' + str(par) + ' ' + str(nexp))
                            close_file(f)
        elif p == "greedy aot-value" or p == "optimistic aot-value":
            for width in aot_value_widths:
                for par in aot_parameters:
                    for factor in aot_nexp:
                        nexp = int(factor * width)
                        if nexp > 0:
                            f = open_file()
                            if p == "greedy aot-value":
                                f.write('-h 10 ')
                            else:
                                f.write('-h 12 ')
                            f.write(task + ' ' + p + ' ')
                            f.write(str(width) + ' ' + str(depth) + ' ' + str(par) + ' ' + str(nexp))
                            close_file(f)
        elif p == "xxx xxx":
            f = open_file()
            f.write(task + ' ' + p)
            close_file(f)

